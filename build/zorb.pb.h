/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.1 at Tue Oct  2 17:01:51 2018. */

#ifndef PB_ZORB_ZORB_PB_H_INCLUDED
#define PB_ZORB_ZORB_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _zorb_Timeline {
    pb_callback_t vibrations;
/* @@protoc_insertion_point(struct:zorb_Timeline) */
} zorb_Timeline;

typedef struct _zorb_Vibration {
    uint32_t channels;
    uint32_t delay;
    uint32_t duration;
    uint32_t position;
    uint32_t start;
    uint32_t end;
    uint32_t easing;
/* @@protoc_insertion_point(struct:zorb_Vibration) */
} zorb_Vibration;

/* Default values for struct fields */

/* Initializer values for message structs */
#define zorb_Timeline_init_default               {{{NULL}, NULL}}
#define zorb_Vibration_init_default              {0, 0, 0, 0, 0, 0, 0}
#define zorb_Timeline_init_zero                  {{{NULL}, NULL}}
#define zorb_Vibration_init_zero                 {0, 0, 0, 0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define zorb_Timeline_vibrations_tag             1
#define zorb_Vibration_channels_tag              1
#define zorb_Vibration_delay_tag                 2
#define zorb_Vibration_duration_tag              3
#define zorb_Vibration_position_tag              4
#define zorb_Vibration_start_tag                 5
#define zorb_Vibration_end_tag                   6
#define zorb_Vibration_easing_tag                7

/* Struct field encoding specification for nanopb */
extern const pb_field_t zorb_Timeline_fields[2];
extern const pb_field_t zorb_Vibration_fields[8];

/* Maximum encoded size of messages (where known) */
/* zorb_Timeline_size depends on runtime parameters */
#define zorb_Vibration_size                      42

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define ZORB_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
